# This Makefile.PL for  was generated by Dist::Zilla.
# Don't edit it but the dist.ini used to construct it.

use strict;
use warnings;
use ExtUtils::MakeMaker 6.31;

my %WriteMakefileArgs = (
  'ABSTRACT' => 'L<DBI> backend for L<KiokuDB>',
  'AUTHOR' => 'Yuval Kogman',
  'BUILD_REQUIRES' => {
    'DBD::SQLite' => '0',
    'DBI' => '0',
    'KiokuDB' => '0',
    'KiokuDB::Test' => '0',
    'Search::GIN::Extract::Class' => '0',
    'Test::Exception' => '0',
    'Test::More' => '0',
    'Test::TempDir' => '0',
    'YAML::XS' => '0',
    'ok' => '0'
  },
  'CONFIGURE_REQUIRES' => {
    'DBIx::Class::Optional::Dependencies' => '0',
    'ExtUtils::MakeMaker' => '6.31'
  },
  'DISTNAME' => 'KiokuDB-Backend-DBI',
  'EXE_FILES' => [],
  'LICENSE' => 'perl',
  'NAME' => 'KiokuDB::Backend::DBI',
  'PREREQ_PM' => {
    'Carp' => '0',
    'Class::Accessor::Grouped' => '0',
    'DBI' => '1.607',
    'DBIx::Class' => '0.08123',
    'DBIx::Class::Core' => '0',
    'DBIx::Class::ResultSource::Table' => '0',
    'DBIx::Class::Schema' => '0',
    'Data::Stream::Bulk' => '0.07',
    'Data::Stream::Bulk::DBI' => '0',
    'JSON' => '0',
    'KiokuDB' => '0.46',
    'KiokuDB::Backend' => '0',
    'KiokuDB::Backend::Role::Clear' => '0',
    'KiokuDB::Backend::Role::Concurrency::POSIX' => '0',
    'KiokuDB::Backend::Role::GC' => '0',
    'KiokuDB::Backend::Role::Query::GIN' => '0',
    'KiokuDB::Backend::Role::Query::Simple' => '0',
    'KiokuDB::Backend::Role::Scan' => '0',
    'KiokuDB::Backend::Role::TXN' => '0',
    'KiokuDB::Backend::Serialize::Delegate' => '0',
    'KiokuDB::TypeMap' => '0',
    'KiokuDB::TypeMap::Entry' => '0',
    'KiokuDB::TypeMap::Entry::Naive' => '0',
    'Moose' => '0',
    'Moose::Util::TypeConstraints' => '0',
    'MooseX::Types' => '0.08',
    'MooseX::Types::Moose' => '0',
    'SQL::Abstract' => '0',
    'Scalar::Util' => '0',
    'Search::GIN' => '0',
    'Search::GIN::Extract::Delegate' => '0',
    'Test::More' => '0.88',
    'Test::TempDir' => '0',
    'Test::use::ok' => '0',
    'Try::Tiny' => '0',
    'namespace::autoclean' => '0',
    'namespace::clean' => '0'
  },
  'VERSION' => '1.12',
  'test' => {
    'TESTS' => 't/*.t'
  }
);


unless ( eval { ExtUtils::MakeMaker->VERSION(6.56) } ) {
  my $br = delete $WriteMakefileArgs{BUILD_REQUIRES};
  my $pp = $WriteMakefileArgs{PREREQ_PM}; 
  for my $mod ( keys %$br ) {
    if ( exists $pp->{$mod} ) {
      $pp->{$mod} = $br->{$mod} if $br->{$mod} > $pp->{$mod}; 
    }
    else {
      $pp->{$mod} = $br->{$mod};
    }
  }
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

require DBIx::Class::Optional::Dependencies;

$WriteMakefileArgs{PREREQ_PM} = {
    %{ $WriteMakefileArgs{PREREQ_PM} || {} },
    %{ DBIx::Class::Optional::Dependencies->req_list_for ('deploy') },
};

WriteMakefile(%WriteMakefileArgs);

